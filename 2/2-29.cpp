/*
函数模板的参数推导规则也并不复杂。
简单地讲，如果能够从函数实参中推导出类型的话，那么默认模板参数就不会被使用，
反之，默认模板参数 则可能会被使用。
*/
template<class T,class U=double>
void f(T t=0,U u=0); 

void g()
{ 
    f(1,'c');//f＜int,char＞(1,'c') 
    f(1);//f＜int,double＞(1,0),使用了默认模板参数double 
    //f();//错误:T无法被推导出来 
    f<int>();//f＜int,double＞(0,0),使用了默认模板参数double
    f<int,char>();//f＜int,char＞(0,0) 
}

/*
表达式f()由于第一类型参数T的 无法推导，从而导致了编译的失败。
而通过这个例 子我们也可以看到，默认模板参数通常是需要跟默认函数参数一起使用的。

模板函数的默认形参 不是模板参数推导的依据。函数模板参数的选择， 总是由函数的实参推导而来的
*/